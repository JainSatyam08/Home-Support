
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DELL
 */
public class Filterrequestinputframe extends javax.swing.JFrame {

    /**
     * Creates new form Filterrequestinputframe
     */
    public Filterrequestinputframe() {
        initComponents();
        cmbapp.setVisible(false);
        cmbbrand.setVisible(false);
        lblapp.setVisible(false);
        lblbrand.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblservice = new javax.swing.JLabel();
        cmbservice = new javax.swing.JComboBox<>();
        cmbland = new javax.swing.JComboBox<>();
        lbltime = new javax.swing.JLabel();
        cmbtime = new javax.swing.JComboBox<>();
        lblapp = new javax.swing.JLabel();
        cmbapp = new javax.swing.JComboBox<>();
        lblland = new javax.swing.JLabel();
        lblbrand = new javax.swing.JLabel();
        cmbbrand = new javax.swing.JComboBox<>();
        lblstatus = new javax.swing.JLabel();
        cmbstatus = new javax.swing.JComboBox<>();
        lblmess = new javax.swing.JLabel();
        btsearch = new javax.swing.JButton();
        btclear = new javax.swing.JButton();
        btback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(248, 228, 184));
        jPanel1.setMaximumSize(new java.awt.Dimension(700, 750));
        jPanel1.setMinimumSize(new java.awt.Dimension(700, 750));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 750));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 36)); // NOI18N
        jLabel1.setText("FILTER REQUEST !!!!");

        lblservice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblservice.setText("Service Type");

        cmbservice.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmbservice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SERVICE TYPE", "Electrician", "Plumber", "Appliance Care", "Painter", "Carpenter" }));
        cmbservice.setPreferredSize(new java.awt.Dimension(270, 32));
        cmbservice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbserviceActionPerformed(evt);
            }
        });

        cmbland.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmbland.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LANDMARK", "Bijnore", "Meerut", "Muzaffarnagar", "Saharanpur", "Shamli" }));
        cmbland.setPreferredSize(new java.awt.Dimension(270, 32));
        cmbland.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmblandActionPerformed(evt);
            }
        });

        lbltime.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbltime.setText("Prefer Time");

        cmbtime.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmbtime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TIME", "Morning", "Afternoon", "Evening", "" }));
        cmbtime.setPreferredSize(new java.awt.Dimension(270, 32));
        cmbtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbtimeActionPerformed(evt);
            }
        });

        lblapp.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblapp.setText("Appliance");

        cmbapp.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmbapp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "APPLIANCE", "Air Conditioner", "Home Theatre", "Microwave/Oven", "Refrigerator", "Smart TV", "Washing Machine" }));
        cmbapp.setPreferredSize(new java.awt.Dimension(270, 32));
        cmbapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbappActionPerformed(evt);
            }
        });

        lblland.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblland.setText("Landmark");

        lblbrand.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblbrand.setText("Brand");

        cmbbrand.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmbbrand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BRAND", "LG", "Panasonic", "Hitachi", "Goderej", "Xiaomi", "Samsung", "Daikin", "Havels", "Sony", "Philips" }));
        cmbbrand.setPreferredSize(new java.awt.Dimension(270, 32));
        cmbbrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbbrandActionPerformed(evt);
            }
        });

        lblstatus.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblstatus.setText("Status");

        cmbstatus.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmbstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "STATUS", "Assinged", "Approved", "Rejected", "Requested" }));
        cmbstatus.setMaximumSize(new java.awt.Dimension(270, 32));
        cmbstatus.setMinimumSize(new java.awt.Dimension(270, 32));
        cmbstatus.setPreferredSize(new java.awt.Dimension(270, 32));
        cmbstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbstatusActionPerformed(evt);
            }
        });

        lblmess.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N

        btsearch.setBackground(new java.awt.Color(0, 204, 0));
        btsearch.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        btsearch.setText("SEARCH");
        btsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsearchActionPerformed(evt);
            }
        });

        btclear.setBackground(new java.awt.Color(255, 255, 0));
        btclear.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        btclear.setText("CLEAR");
        btclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btclearActionPerformed(evt);
            }
        });

        btback.setBackground(new java.awt.Color(204, 0, 51));
        btback.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        btback.setText("BACK");
        btback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(lblmess, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btsearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btclear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblstatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblbrand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbltime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblservice, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                .addComponent(lblland, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblapp, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(95, 95, 95)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbservice, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbland, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbtime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbapp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbbrand, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbstatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblservice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbservice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblstatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbstatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbland, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblland, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbltime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbtime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbapp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblapp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblbrand, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbbrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(lblmess, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(btsearch)
                .addGap(18, 18, 18)
                .addComponent(btclear)
                .addGap(18, 18, 18)
                .addComponent(btback)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbserviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbserviceActionPerformed
        lblmess.setText("");
        String select=cmbservice.getSelectedItem().toString();
        boolean isapp=select.equals("Appliance Care");
        cmbapp.setVisible(isapp);
        cmbbrand.setVisible(isapp);
        lblapp.setVisible(isapp);
        lblbrand.setVisible(isapp);
    }//GEN-LAST:event_cmbserviceActionPerformed

    private void btsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsearchActionPerformed
        String qry = "SELECT r.*, s.status FROM request r JOIN status s ON r.r_id = s.r_id WHERE 1=1";
        ArrayList<String> filters= new ArrayList<>();
        String type = cmbservice.getSelectedItem().toString();
        String status = cmbstatus.getSelectedItem().toString();
        String land = cmbland.getSelectedItem().toString();
        String time = cmbtime.getSelectedItem().toString();
        String appl = cmbapp.getSelectedItem().toString();
        String brand = cmbbrand.getSelectedItem().toString();
        boolean filterApplied = false;
        System.out.println("Final Query: " + qry);
        System.out.println("Filters: " + filters);

        if(!type.trim().equalsIgnoreCase("SERVICE TYPE")){
            qry+=" and r.s_type=?";
            filters.add(type);
            filterApplied= true;
            lblmess.setText("");
            if(type.trim().equalsIgnoreCase("Appliance Care")){
                if(!appl.equals("APPLIANCE")){
                    qry += " and r.appl_type = ?";
                    filters.add(appl);  
                }
                 if (!brand.trim().equalsIgnoreCase("BRAND")) {
                    qry += " and r.brand = ?";
                    filters.add(brand);
                }
                 
            }
        }
        if (!status.trim().equalsIgnoreCase("STATUS")) {
        qry += " and s.status = ?";
        filters.add(status);
        filterApplied = true;
        lblmess.setText("");
        }

        if (!land.trim().equalsIgnoreCase("LANDMARK")) {
            qry += " and r.l_mark = ?";
            filters.add(land);
            filterApplied = true;
            lblmess.setText("");
        }
        if (!time.trim().equalsIgnoreCase("TIME")) {
            qry += " and r.p_time = ?";
            filters.add(time);
            filterApplied = true;
            lblmess.setText("");
        }
        if(filterApplied == false){
            lblmess.setText("Please select at least one Filter");
            return;
        }
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/homesupport?user=root&password=satyam");
                PreparedStatement ps = con.prepareStatement(qry);
            for (int i = 0; i < filters.size(); i++) {
                ps.setString(i + 1, filters.get(i));
            }
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                
                new Filterrequestdetailframe(qry, filters).setVisible(true);
                this.dispose();
            } else {
                lblmess.setText("No record found.");
            }
        } catch (Exception e) {
            System.out.println(e);
            lblmess.setText("Error occurred.");
        }
    }//GEN-LAST:event_btsearchActionPerformed

    private void cmbstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbstatusActionPerformed
        lblmess.setText("");
    }//GEN-LAST:event_cmbstatusActionPerformed

    private void cmblandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmblandActionPerformed
        lblmess.setText("");
    }//GEN-LAST:event_cmblandActionPerformed

    private void cmbtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbtimeActionPerformed
        lblmess.setText("");
    }//GEN-LAST:event_cmbtimeActionPerformed

    private void cmbappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbappActionPerformed
        lblmess.setText("");
    }//GEN-LAST:event_cmbappActionPerformed

    private void cmbbrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbbrandActionPerformed
        lblmess.setText("");
    }//GEN-LAST:event_cmbbrandActionPerformed

    private void btbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbackActionPerformed
        dispose();
        new Requestblockhomeframe().setVisible(true);
    }//GEN-LAST:event_btbackActionPerformed

    private void btclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btclearActionPerformed
        cmbstatus.setSelectedIndex(0);
        cmbland.setSelectedIndex(0);
        cmbtime.setSelectedIndex(0);
        cmbservice.setSelectedIndex(0);
        cmbapp.setSelectedIndex(0);
        cmbbrand.setSelectedIndex(0);
        cmbapp.setVisible(false);
        cmbbrand.setVisible(false);
        lblapp.setVisible(false);
        lblbrand.setVisible(false);
        lblmess.setText("");
    }//GEN-LAST:event_btclearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Filterrequestinputframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Filterrequestinputframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Filterrequestinputframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Filterrequestinputframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Filterrequestinputframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btback;
    private javax.swing.JButton btclear;
    private javax.swing.JButton btsearch;
    private javax.swing.JComboBox<String> cmbapp;
    private javax.swing.JComboBox<String> cmbbrand;
    private javax.swing.JComboBox<String> cmbland;
    private javax.swing.JComboBox<String> cmbservice;
    private javax.swing.JComboBox<String> cmbstatus;
    private javax.swing.JComboBox<String> cmbtime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblapp;
    private javax.swing.JLabel lblbrand;
    private javax.swing.JLabel lblland;
    private javax.swing.JLabel lblmess;
    private javax.swing.JLabel lblservice;
    private javax.swing.JLabel lblstatus;
    private javax.swing.JLabel lbltime;
    // End of variables declaration//GEN-END:variables
}
